    void MakePath(stack<string>&st, string &ans)
    {
        if(st.empty())
        {
            return;
        }
        string temp=st.top();
        st.pop();
        MakePath(st,ans);
        ans+=temp;
    }
    string simplifyPath(string path) {
        if(path.empty())
        {
            return "/";
        }
        stack<string>st;
        int i=0;
        while(i<path.size())
        {
            int start=i;
            int end=i+1;
            while(end<path.size() && path[end]!='/')
            {
                end++;
            }
            string temp=path.substr(start,end-start);
            i=end;
            if(temp=="/." || temp=="/")
            {
                continue;
            }
            if(temp != "/..")
            {
                st.push(temp);
            }
            else
            {
                 if(!st.empty())
                   {
                    st.pop();
                   }
            }
        }
             string ans=st.empty()?"/":"";
             MakePath(st,ans);
             return ans;
    }
