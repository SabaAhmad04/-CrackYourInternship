   vector<int> FindPreviousIndex(vector<int>&heights)
    {
        vector<int>prev(heights.size());
        stack<int>st;
        st.push(-1);
        for(int i=0;i<heights.size();i++)
        {
              while(st.top()!=-1 && heights[st.top()]>=heights[i])
              {
                st.pop();
              }
              prev[i]=st.top();
              st.push(i);
        }
        return prev;
    }
    vector<int> FindNextIndex(vector<int>&heights)
    {
        vector<int>next(heights.size());
        stack<int>st;
        st.push(-1);
        for(int i=heights.size()-1;i>=0;i--)
        {
              while(st.top()!=-1 && heights[st.top()]>=heights[i])
              {
                st.pop();
              }
              next[i]=st.top();
              st.push(i);
        }
        return next;
    }
    int largestRectangleArea(vector<int>& heights) {
        vector<int>pre=FindPreviousIndex(heights);
        vector<int>nex=FindNextIndex(heights);
        for(int i=0;i<nex.size();i++)
        {
            if(nex[i]==-1)
            {
                nex[i]=nex.size();
            }
        }
        int MaxArea=INT_MIN;
        for(int i=0;i<heights.size();i++)
        {
            int width=heights[i];
            int length=nex[i]-pre[i]-1;
            int currArea=width*length;
            MaxArea=max(currArea,MaxArea);
        }
        return MaxArea;
    }
