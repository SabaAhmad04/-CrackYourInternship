    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        sort(nums.begin(),nums.end());
        vector<vector<int>>ans;
        for(int i=0;i<nums.size();i++)
        {
            if(i>0 && nums[i]==nums[i-1]) continue;
            for(int j=i+1;j<nums.size();j++)
            {
                if(j>(i+1) && nums[j]==nums[j-1]) continue;
                int l=j+1;
                int h=nums.size()-1;
                while(l<h)
                {
                    long long  sum=nums[i];
                    sum+=nums[j];
                    sum+=nums[l];
                    sum+=nums[h];
                    if(sum==target)
                    {
                        ans.push_back({nums[i],nums[j],nums[l],nums[h]});
                        long long lowOccurance=nums[l];
                        long long highOccurance=nums[h];
                        l++;
                        h--;
                        while(l<h && nums[l]==lowOccurance)
                        {
                            l++;
                        }
                        while(l<h && nums[h]==highOccurance)
                        {
                            h--;
                        }
                    }
                    else if(sum>target)
                    {
                        h--;
                    }
                    else
                    {
                        l++;
                    }
                }
            }
        }
        return ans;
    }
